#include"Alcohol.h"
#include "Liquid.h"

int main()
{
	Alcohol alc(45, "VODKA", 900);
	cout << alc << endl;
	Liquid liq("WATER", 785);
	cout << liq << endl;
}



#pragma once
#include <string>
#include<iostream>
using namespace std;

class Liquid
{
protected:
	string name;
	double density;
	const double MIN_DENSITY = 0;
	/**
	 \brief	Проверка плотности
	 */
	void set_density(const double density);
	Liquid();
public:
	/**
	 \brief	Конструктор с параметрами
	 */
	explicit Liquid(const string& name, const double density);
	/**
	 \brief	Деструктор
	 */
	~Liquid() = default;
	/**
	 \brief	Оператор сдвига
	 */
	friend ostream& operator<<(ostream& out, Liquid& liq);
	/**
	 \brief	получает плотность
	 */
	double get_density()const;
	/**
	 \brief	получает имя
	 */
	string get_name()const;
	/**
	 \brief	изменяет плотность
	 */
	void set_new_density(const double density);
	/**
	 \brief	изменяет имя
	 */
	void set_name(const string& name);
};



#include"Liquid.h"
void Liquid::set_density(const double density)
{
	if (density > MIN_DENSITY)
	{
		this->density = density;
	}
	else
	{
		throw invalid_argument{ "Плотность должна быть больше нуля" };
	}
}
Liquid::Liquid()
{
	name = "";
	density = 0;
}
ostream& operator<<(ostream& out, Liquid& liq)
{
	out << "Name:" << liq.get_name() << endl;
	out << "Density: " << liq.get_density() << endl;
	return out;
}
Liquid::Liquid(const string& name, const double density)
{
	this->name = name;
	set_density(density);
}
void Liquid::set_new_density(const double density)
{
	this->density = density;
}
void Liquid::set_name(const string& name)
{
	this->name = name;
}
string Liquid::get_name()const
{
	return name;
}
double Liquid::get_density()const
{
	return density;
}



#pragma once
#include"Liquid.h"

class Alcohol :public Liquid
{
private:
	double strength_drink;
	/**
	 \brief	Проверка крепости напитка
	 */
	void set_strength_drink(const double strength_drink);
	const double MAX_DEGREE = 0;
	const double MIN_DEGREE = 96;
public:
	/**
	 \brief	Конструктор с параметрами
	 */
	explicit Alcohol(const double strength_drink, const string& name, const double density);
	/**
	 \brief	Оператор сдвига
	 */
	friend ostream& operator<<(ostream& out, Alcohol& alc);
	/**
	 \brief	получает крепость
	 */
	double get_strength_drink()const;
	/**
	 \brief	меняет крепость
	 */
	void set_new_strength_drink(const double strength_drink);
};





#include"Liquid.h"
#include "Alcohol.h"

void Alcohol::set_strength_drink(const double strength_drink)
{
	if (strength_drink > MIN_DEGREE && strength_drink <= MAX_DEGREE)
	{
		this->strength_drink = strength_drink;
	}
	else
	{
		throw invalid_argument{ "Неверная крепость напитка" };
	}
}
void Alcohol::set_new_strength_drink(const double strength_drink)
{
	set_strength_drink(strength_drink);
}
Alcohol::Alcohol(const double strength_drink, const string& name, const double density)
{
	this->strength_drink = strength_drink;
	this->name = name;
	set_density(density);
}
ostream& operator<<(ostream& out, Alcohol& alc)
{
	out << "Name:" << alc.get_name() << endl;
	out << "Strenght: " << alc.get_strength_drink() << endl;
	return out;
}
double Alcohol::get_strength_drink()const
{
	return strength_drink;
}